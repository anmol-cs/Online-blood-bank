<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sMuyVIXavmVv6SgWymihRnCeW0Wm1dp29xb9HTTTytUvNn3XHo6LVWq4ZgNo7RU3sSd5yzB8jc8plWt9
        570WYbM2yqUFSrRbS0a1xyefPQj6ag4x9lXYBRkNo1CFH2Rs/hI6t6j1aLWW2rKKbjFt9iXiWHoPVBcJ
        hKqU/rKji7NldiPkAL2FzvOZvJ1OkoRwjmL3aErmupyWEnwXL92RrUbU3EYbFpWqbBUAjsl75kZ5qBw5
        yPQoThPLaLbau1Le4t3Tppp5WqXmzvdJGqZxYSpSsKgNrm9rG172ueA4er3mbrilvx4aldsi/VrUamm4
        vXHNaPw/kYujnQ+LwhalV2GpE7QsXupO8WZQLHf3G/tGY28JwypaGzbFzbXLjOkmpaPKXFdzfFfehPpJ
        KQQBAEAQBAEAQBAEA0np3bzmODapcDMcKvhPcGPSMx4YWPjCMpvKPlVLt52ngi8IythltunuDHfZ4wos
        YR7PijzSTt37zPD1v1T3is7DznrPIcOJ5wqWbyniPZvKPJp7TZ84G9hGWphlsbC09wYqbyfMKLXEI9nx
        PGFSzeU8R7N8D7iO0bcvnPWeR4GxRp7ItPTCTyz3B4IAgCAIAgCAIAgCAYyuc8Ms8DJPTExquc8Mm+A2
        c/OBngZJ6YmNFznhk2fFXOBngfQmd4GRTXOA2FXOA3wPbbp6Yo8U1tPDJs8hIPcn3YtB5kyCemJ9gCAI
        AgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAI
        AgCAIAgH/9k=
</value>
  </data>
</root>